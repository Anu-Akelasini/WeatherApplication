@using TodoBlazor.DTOs;

<div class="container">
    <!-- Current Weather Centered -->
    <div class="row justify-content-center mb-5">
        <div class="col-md-8">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h2 class="card-title">Current Conditions</h2>
                    <h4 class="text-muted">@Weather.Location.name</h4>
                    <WeatherCard WeatherDescription="@Weather.CurrentWeather.weather.First().main"
                                 Temperature="@Weather.CurrentWeather.main.temp"
                                 TemperatureFeelsLike="@Weather.CurrentWeather.main.feels_like"
                                 TemperatureMax="@Weather.CurrentWeather.main.temp_max"
                                 TemperatureMin="@Weather.CurrentWeather.main.temp_min"
                                 Humidity="@Weather.CurrentWeather.main.humidity"
                                 WindSpeed="@Weather.CurrentWeather.wind.speed" />
                </div>
            </div>
        </div>
    </div>

    <!-- 5-Day Forecast -->
    <div class="row">
        <h2 class="text-center mb-4">5-Day Weather Forecast</h2>

        @foreach (var date in Weather.WeatherForecast.list.Select(l => l.dtDateTime.Date).Distinct())
        {
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm h-100">
                    <div class="card-body text-center">
                        <h5 class="card-title text-muted">@date.ToShortDateString()</h5>

                        @{
                            var firstWeatherUpdate = Weather.WeatherForecast.list
                            .Where(l => l.dtDateTime.Date == date)
                            .OrderBy(l => l.dtDateTime)
                            .FirstOrDefault();
                        }

                        @if (firstWeatherUpdate != null)
                        {
                            <WeatherCard DateTime="@firstWeatherUpdate.dtDateTime.ToString("dd/MM/yy")"
                                         WeatherIconImgSrc="@firstWeatherUpdate.weather.First().iconImgSrc"
                                         WeatherDescription="@firstWeatherUpdate.weather.First().main"
                                         Temperature="@firstWeatherUpdate.main.temp"
                                         TemperatureFeelsLike="@firstWeatherUpdate.main.feels_like"
                                         TemperatureMax="@firstWeatherUpdate.main.temp_max"
                                         TemperatureMin="@firstWeatherUpdate.main.temp_min"
                                         Humidity="@firstWeatherUpdate.main.humidity"
                                         WindSpeed="@firstWeatherUpdate.wind.speed" />
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public WeatherDTO Weather { get; set; }
}
